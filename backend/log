# Progresso aplicação backend fastfeet
                         Desafio 2: FastFeet, o ínicio
########################## Etapa 1/4 do Desafio Final ##########################

  * Configurações:
      Sucrase + Nodemon;
      ESLint + Prettier + EditorConfig;
      Banco de Dados PostgreSQL + Sequelize

 [x] - Seed de usuário Admin;
 [x] - Criação de outros usuário dentro da aplicação;
 [x] - Criptografia de senha de usuário;
 [x] - Autenticação JWT;
 [x] - Criação de Sessão;
 [x] - Autenticação dos dados de entrada (UserController and SessionController);
 [x] - Criação do model e controller de Recipient;
 [x] - Criação do middleware de autenticação;
 [x] - Criação de recipient somente com usuário logado na aplicação;
 [x] - Validatação dos dados de entrada no método store do recipient;
 [x] - Validatação dos dados de entrada no método update do recipient;

                  Desafio 3: FastFeet, continuando a aplicação
########################## Etapa 2/4 do Desafio Final ##########################

 [x] - Criação da migration do deliver;
 [x] - Criação da rota de criação de delivers no metodo store do DeliverController;
 [x] - Criação da rota de listagem de delivers no metodo index do DeliverController;
 [x] - Upload do avatar do deliver implementado;
 [x] - Criação do relacionamento da coluna de avatar_id da tabela delivers com a
   coluna id da tabela file;
 [x] - Adicionando validação para dados de entrada no método de criação do deliver;
 [x] - Atualização de email e nome do usuário no método update (verificar como será
   feita a atualização do avatar do usuário) => Verificar necessidade de valida-
   ção dos dados de entrada;
 [x] - Criação da rota para deleção de delivers;
 [x] - Criação da migration create-packages para gestão das encomendas;
 [x] - Criação do model e controller para a gestão de encomendas;
 [x] - Validação dos dados de entrada para o controller de gestão de encomendas;
 [x] - Criação da migration para a tabela signature para armazenar a imagem corres-
   pondente à assinatura de recebimento do pacote por parte do reciever;
 [x] - Criação do controller e rota para o armazenamento da imagem da assinatura do
   reciever no banco de dados;
 [x] - Criação de migration para adicionar relacionamento entre a coluna signature_id
   da tabela packages e a coluna id da tabela signature;
 [x] - Criação do método store no PackageController para o cadastro de um produto
   para um entregador;
 [x] - Adicionada feature de envio de email quando é cadastrado um novo produto para
   um determinado entregador;
 [x] - Finalizado estilização para template de email de notificação para cadastro de
   novo produto para entregador;
 [x] - Incluido rota para listagem dos produtos cadastrados;
 [x] - Adicionada feature de Fila usando Redis no envio de emails;
 [x] - Adicionado Rota para atualização de Encomendas;
 [x] - Adicionado Rota para remoção de pacotes;
 [x] - Adicionada Rota para que o deliver possa ver suas entregas disponíveis que
   não estão nem canceladas nem foram entregues ainda, ou seja, o signature_id
   ainda é nulo;
 [x] - Implementada verificação do horário de retirada das encomendas;
 [x] - Implementada contagem de entregas que o deliver pode fazer por dia, que são
   o total de 5 entregas. (REVISAR ESSE CÓDIGO DEPOIS, "Ñ FUNCIONA BEM", MAS FICOU FEIO);
 [x] - Implementada finalização da entrega com envio da imagem da assinatura do
   recipient;
 [x] - Implementada validação de dados do controler de encerramento das entregas;
 [x] - Implementado cadastro de problemas na entrega por parte do entregador;
 [x] - Implementada validação de dados de entreda para o cadastro de problemas com
   a entrega;
 [x] - Implementada verificação para ver se já existe problema cadastrado para a
   entrega que está sendo feita;
 [x] - Adicionado rotas para a distribuidora listar todos os problemas de uma entrega
   baseada no id e listagem de todas as entregas com problemas;
 [x] - Adicionada rota para distribuidora cancelar uma entrega de acordo com a gravidade
   do problema relatado pelo entregador;
 [x] - Implementado envio de email para o entregador quando a entrega for cancelada problema
   distribuidora;

